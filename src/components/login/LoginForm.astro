---
import AlertMessage from '@components/AlertMessage.astro'
---

<form class="max-w-sm mx-auto my-28 p-4">
  <div class="my-5">
    <label for="email" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Tú email</label>
    <input type="email" id="email" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="name@money.com" required />
  </div>
  <div class="mb-5">
    <label for="password" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Tú contraseña</label>
    <input type="password" id="password" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" required />
  </div>
  <div class="flex items-start mb-5">
    <div class="flex items-center h-5">
      <input id="remember" type="checkbox" value="" class="w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-blue-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800" />
    </div>
    <label for="remember" class="ms-2 text-sm font-medium text-gray-900 dark:text-gray-300 select-none">Recuérdame</label>
  </div>
  <AlertMessage alertId="alert-missing" typeAlert="warning" alertMessage="Por favor llena los campos" />
  <AlertMessage alertId="alert-email" typeAlert="warning" alertMessage="Introduce un correo válido" />
  <AlertMessage alertId="alert-not-found" typeAlert="warning" alertMessage="Usuario no encontrado." />
  <AlertMessage alertId="alert-passwords" typeAlert="warning" alertMessage="Las contraseñas no coinciden" />
  <AlertMessage alertId="alert-success" typeAlert="success" alertMessage="Iniciando sesión..." />
  <button type="submit" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Ingresar</button>
</form>

<script>
  import validator from 'validator'
  import { showAndHideAlert } from '@utils/alerts'
  import { loginUser } from '@utils/login-user'

  const alertMissing = document.querySelector('#alert-missing') as HTMLDivElement
  const alertEmail = document.querySelector('#alert-email') as HTMLDivElement
  const alertNotFound = document.querySelector('#alert-not-found') as HTMLDivElement
  const alertPasswords = document.querySelector('#alert-passwords') as HTMLDivElement
  const alertSuccess = document.querySelector('#alert-success') as HTMLDivElement

  const form = document.querySelector('form')
  form?.addEventListener('submit', async (e) => {
    e.preventDefault()

    const email = (document.querySelector('#email') as HTMLInputElement).value
    const userPassword = (document.querySelector('#password') as HTMLInputElement).value

    if (email === '' || userPassword === '') {
      return showAndHideAlert(alertMissing)
    }
    if (!validator.isEmail(email)) {
      return showAndHideAlert(alertEmail)
    }

    // implementar la función de coockies en caso de que quiera

    const apiBody = {
      email,
      userPassword
    }

    const apiResponse = await loginUser(apiBody)

    if (typeof apiResponse === 'boolean') {
      setTimeout(() => {
        window.location.href = '/dashboard'
      }, 5000)
      return showAndHideAlert(alertSuccess)
    }

    if (typeof apiResponse === 'number' && apiResponse === 404) {
      return showAndHideAlert(alertNotFound)
    } else if (typeof apiResponse === 'number' && apiResponse === 401) {
      return showAndHideAlert(alertPasswords)
    }

    showAndHideAlert(alertMissing)
  })
</script>
