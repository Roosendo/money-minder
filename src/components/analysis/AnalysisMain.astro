<div class='m-auto mt-6 w-full max-w-2xl rounded-lg bg-white p-6 text-gray-900 shadow-md'>
	<h2 id='month-text' class='mb-4 text-center text-xl font-semibold'>
		Mostrando datos de October 2024
	</h2>

	<div class='mb-4 flex justify-center'>
		<input
			id='month-input'
			type='month'
			class='w-auto rounded-lg border border-gray-300 p-2 text-center text-white'
		/>
	</div>

	<div
		class='mx-auto mt-4 flex h-auto w-2/3 flex-col space-y-4 sm:w-full sm:flex-row md:space-x-4 md:space-y-0'
	>
		<div class='flex-1'>
			<span class='mb-2 block text-center font-medium text-gray-700'>Ingresos</span>
			<canvas id='canva-ingreso'></canvas>
		</div>
		<div class='flex-1'>
			<span class='mb-2 block text-center font-medium text-gray-700'>Egresos</span>
			<canvas id='canva-egreso'></canvas>
		</div>
	</div>

	<div class='m-auto mt-6 flex w-2/3 flex-col text-center md:w-1/2'>
		<h3>Total de Ingresos: <span id='totalIngresos'></span></h3>
		<h3 class='border-b border-gray-400'>- Total de Gastos: <span id='totalEgresos'></span></h3>
		<h3>Saldo / Diferencia: <span id='difference'></span></h3>
	</div>
</div>

<script>
	import { $ } from '@lib/dom-selector'
	import { fetchCategories, fetchSummary } from '@utils/api'
	import { updateGraphics, updateMonthText, updateSummary } from '@utils/ui'

	document.addEventListener('astro:page-load', async () => {
		const monthInput = $('#month-input') as HTMLInputElement
		const monthText = $('#month-text') as HTMLHeadingElement
		const $canvaIngreso = $('#canva-ingreso') as HTMLCanvasElement
		const $canvaEgreso = $('#canva-egreso') as HTMLCanvasElement
		const $totalIngresos = $('#totalIngresos') as HTMLSpanElement
		const $totalEgresos = $('#totalEgresos') as HTMLSpanElement
		const $difference = $('#difference') as HTMLSpanElement

		const fetchCategoryData = async (date: Date) => {
			const yearString = date.getFullYear().toString()
			const monthString = (date.getMonth() + 1).toString().padStart(2, '0')
			updateMonthText(monthText, date)

			try {
				const { dataEntries, dataExits } = await fetchCategories(monthString, yearString)
				updateGraphics(dataEntries, dataExits, $canvaIngreso, $canvaEgreso)

				const dataSummary = await fetchSummary(monthString, yearString)
				updateSummary(dataSummary, $totalIngresos, $totalEgresos, $difference)
			} catch (error) {
				console.error('Error fetching data:', error)
			}
		}

		const currentDate = new Date()
		if (monthInput) monthInput.value = currentDate.toISOString().substring(0, 7)
		fetchCategoryData(currentDate)

		monthInput.addEventListener('change', (event) => {
			const [year, month] = (event.target as HTMLInputElement).value.split('-').map(Number)
			const selectedDate = year && month ? new Date(year, month - 1) : new Date()
			fetchCategoryData(selectedDate)
		})
	})
</script>
