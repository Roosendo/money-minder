---
import Piggy from "public/Piggy.astro";

let isLogin: boolean;

isLogin = Astro.url.pathname === '/login';
---

<nav class="bg-white dark:bg-gray-900 sticky w-full z-20 top-0 start-0 border-b border-gray-200 dark:border-gray-600">
  <div class="max-w-screen-xl flex flex-wrap items-center md:justify-between justify-evenly mx-auto p-4 md:gap-0 gap-2">
  <a href="/" class="flex items-center space-x-3 rtl:space-x-reverse">
      <Piggy class="h-8 dark:text-white text-black" />
      <span class="self-center md:text-2xl text-lg font-semibold whitespace-nowrap dark:text-white">Money Minder</span>
  </a>
  <div class="flex md:order-2 space-x-3 md:space-x-0 rtl:space-x-reverse">
    <button type="button" id="login" class="text-white bg-cyan-500 hover:bg-cyan-600 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm md:px-4 md:py-2 px-2 py-1 text-center dark:bg-cyan-500 dark:hover:bg-cyan-600 dark:focus:ring-blue-800">
      <a href="/login">Iniciar Sesión</a>
    </button>
    <button data-collapse-toggle="navbar-sticky" type="button" class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600" aria-controls="navbar-sticky" aria-expanded="false">
      <span class="sr-only">Open main menu</span>
      <svg class="w-5 h-5" aria-hidden="true" fill="none" viewBox="0 0 17 14">
        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15"/>
      </svg>
    </button>
  </div>
  <div class="items-center justify-between hidden w-full md:flex md:w-auto md:order-1" id="navbar-sticky">
    <ul class="flex flex-col p-4 md:p-0 mt-4 font-medium border border-gray-100 rounded-lg bg-gray-50 md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700">
      {
        isLogin && (
          <li>
            <a href="/" class="block py-2 px-3 rounded hover:bg-gray-100 md:hover:bg-transparent md:p-0 dark:hover:bg-gray-700 hover:text-cyan-600 md:dark:hover:bg-transparent dark:border-gray-700">Inicio</a>
          </li>
        )
      }
      <li>
        <a href="/#services" aria-label="services" class="block py-2 px-3 rounded hover:bg-gray-100 md:hover:bg-transparent md:p-0 dark:hover:bg-gray-700 hover:text-cyan-600 md:dark:hover:bg-transparent dark:border-gray-700">Servicios</a>
      </li>
      <li>
        <a href="/#about-us" aria-label="about-us" class="block py-2 px-3 rounded hover:bg-gray-100 md:hover:bg-transparent md:p-0 dark:hover:bg-gray-700 hover:text-cyan-600 md:dark:hover:bg-transparent dark:border-gray-700">Sobre Nosotros</a>
      </li>
      <li>
        <a href="/#terms-conds" aria-label="terms-conds" class="block py-2 px-3 rounded hover:bg-gray-100 md:hover:bg-transparent md:p-0 dark:hover:bg-gray-700 hover:text-cyan-600 md:dark:hover:bg-transparent dark:border-gray-700">Términos y Condiciones</a>
      </li>
    </ul>
  </div>
  </div>
</nav>

<script>
  import { Collapse } from 'flowbite';

  document.addEventListener('astro:page-load', ()=> {
    const sections = document.querySelectorAll('section')
    const navItems = document.querySelectorAll('li a')
  
    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            console.log(item.getAttribute('aria-label'))
            console.log(entry.target.id)
            if (item.getAttribute('aria-label') === entry.target.id) {
              item.classList.add('text-cyan-600')
            } else {
              item.classList.remove('text-cyan-600')
            }
          })
        }
      })
    }
  
    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: '0px',
      threshold: 0.3,
    })
  
    sections.forEach((section) => {
      observer.observe(section);
    })
  
    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === 'hidden') {
        observer.disconnect();
      } else {
        sections.forEach((section) => {
          observer.observe(section);
        })
      }
    }
  })

  const $targetEl: HTMLElement = document.getElementById('navbar-sticky')!;

  new Collapse($targetEl);

</script>
